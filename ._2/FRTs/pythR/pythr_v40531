#!/bin/bash

  VENV_DIR=.venv
  VENV_DIR=python_modules

if [ "$1" == "show" ]; then

if [ "$1" == "show" ]; then
   echo ""
   pip --version
   exit
   fi

if [ "$1" == "list" ]; then
   echo ""
   if [ "${VIRTURAL_ENV}" ]; then echo -e "  VIRTURAL ENV: ${VIRTURAL_ENV}"; exit: fi
   pip list | awk '/^'$2'/'
   exit
   fi

if [ "$1" == "create" ]; then
   echo ""
   echo    "Are you sure you want to create a Python virtual environment"
   read -p "  in this folder, ${PWD##*/}/${VENV_DIR}. (y/n) " yorn

   if [ "${yorn}" != "y" ] && [ "${yorn}" != "Y" ]; then
     echo "  Exiting..."
     exit 1  # Use exit code 1 to indicate user cancellation
     fi
   python -m venv python_modules
   exit
   fi


if [ ! -d "${VENV_DIR}" ]; then
  echo -e "\n* You need to be in a Python project folder to [de]activate a virtural environment";
# else

# echo ""
# echo -e "\n  CD $(pwd)\n"; # exit
  exit
  fi
# -----------------------------------------------------

if [ "${BASH_SOURCE[0]}" == "${0}" ]; then echo -e "\n* Please run: source pythr [de]activate"; exit; fi

  GIT_BRANCH=" ($( git branch 2>&1 | awk '/^\*/ { print $2 }' ))"
# GIT_BRANCH=$(__git_ps1)   # a special function created by git
# GIT_BRANCH=$1

# echo "GIT_BRANCH: ${GIT_BRANCH}"; # exit

# -----------------------------------------------------

if [ "$1" == "deactivate" ]; then

# ${VENV_DIR}/Scripts/deactivate.bat
  if [ "$( command -v deactivate )" != "" ]; then deactivate; fi

  export VIRTUAL_ENV=""
  export PROJECT_NAME=
  export PS1="\[\033]0;$TITLEPREFIX:$PWD\007\]\n\[\033[32m\]\u@\h \[\033[35m\]$MSYSTEM \[\033[33m\]\w\[\033[36m\]${GIT_BRANCH}\[\033[0m\]\n$ "
  fi
# -----------------------------------------------------

if [ "$1" == "activate" ]; then

  source ${VENV_DIR}/Scripts/activate
# export VIRTUAL_ENV=""
  export PROJECT_NAME=$(basename "$PWD")
  export PS1="\[\033]0;$TITLEPREFIX:$PWD\007\]\n\[\033[32m\]\u@\h \[\033[35m\]$MSYSTEM \[\033[33m\]\w\[\033[36m\]${GIT_BRANCH}\[\033[0m\] (${PROJECT_NAME}/${VENV_DIR})\n# "

  echo "    \$VIRTUAL_ENV: ${VIRTUAL_ENV}"
# which python | awk '{ print "                " $0 }'

  fi
# -----------------------------------------------------
# echo ""
